{"version":3,"sources":["../src/FirebaseAuth.jsx"],"names":["ELEMENT_ID","firebaseUiDeletion","Promise","resolve","FirebaseAuth","props","uiConfig","firebaseAuth","className","uiCallback","unregisterAuthObserver","componentDidMount","require","firebaseui","then","firebaseUiWidget","auth","AuthUI","getInstance","signInFlow","reset","userSignedIn","onAuthStateChanged","user","start","componentWillUnmount","delete","render","React","Component"],"mappings":";;;;AAiBA;;;;;;;;;;;;AAGA,IAAMA,aAAa,sBAAnB;;AAGA,IAAIC,qBAAqBC,QAAQC,OAAR,EAAzB;;IAKqBC,Y;;;AAOnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,4BAAMA,KAAN,CADiB;;AAGjB,UAAKC,QAAL,GAAgBD,MAAMC,QAAtB;AACA,UAAKC,YAAL,GAAoBF,MAAME,YAA1B;AACA,UAAKC,SAAL,GAAiBH,MAAMG,SAAvB;AACA,UAAKC,UAAL,GAAkBJ,MAAMI,UAAxB;AACA,UAAKC,sBAAL,GAA8B,YAAM,CAAE,CAAtC;AAPiB;AAQlB;;yBAKDC,iB,gCAAoB;AAAA;;AAElBC,YAAQ,gCAAR;;AAIA,QAAMC,aAAaD,QAAQ,YAAR,CAAnB;;AAIA,WAAOX,mBAAmBa,IAAnB,CAAwB,YAAM;AAEnC,aAAKC,gBAAL,GAAwBF,WAAWG,IAAX,CAAgBC,MAAhB,CAAuBC,WAAvB,MAChB,IAAIL,WAAWG,IAAX,CAAgBC,MAApB,CAA2B,OAAKV,YAAhC,CADR;AAEA,UAAI,OAAKD,QAAL,CAAca,UAAd,KAA6B,OAAjC,EAA0C;AACxC,eAAKJ,gBAAL,CAAsBK,KAAtB;AACD;;AAGD,aAAKC,YAAL,GAAoB,KAApB;AACA,aAAKX,sBAAL,GAA8B,OAAKH,YAAL,CAAkBe,kBAAlB,CAAqC,UAACC,IAAD,EAAU;AAC3E,YAAI,CAACA,IAAD,IAAS,OAAKF,YAAlB,EAAgC;AAC9B,iBAAKN,gBAAL,CAAsBK,KAAtB;AACD;AACD,eAAKC,YAAL,GAAoB,CAAC,CAACE,IAAtB;AACD,OAL6B,CAA9B;;AAQA,UAAI,OAAKd,UAAT,EAAqB;AACnB,eAAKA,UAAL,CAAgB,OAAKM,gBAArB;AACD;;AAGD,aAAKA,gBAAL,CAAsBS,KAAtB,CAA4B,MAAMxB,UAAlC,EAA8C,OAAKM,QAAnD;AACD,KAxBM,CAAP;AAyBD,G;;yBAKDmB,oB,mCAAuB;AAAA;;AACrBxB,yBAAqBA,mBAAmBa,IAAnB,CAAwB,YAAM;AACjD,aAAKJ,sBAAL;AACA,aAAO,OAAKK,gBAAL,CAAsBW,MAAtB,EAAP;AACD,KAHoB,CAArB;AAIA,WAAOzB,kBAAP;AACD,G;;yBAqBD0B,M,qBAAS;AACP,WACE,uCAAK,WAAW,KAAKnB,SAArB,EAAgC,IAAIR,UAApC,GADF;AAGD,G;;;EA3FuC4B,gBAAMC,S;;kBAA3BzB,Y","file":"FirebaseAuth.js","sourcesContent":["/**\r\n * Copyright 2017 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// @flow\r\n\r\nimport React from 'react';\r\n\r\n// Global ID for the element.\r\nconst ELEMENT_ID = 'firebaseui_container';\r\n\r\n// Promise that resolves unless the FirebaseUI instance is currently being deleted.\r\nlet firebaseUiDeletion = Promise.resolve();\r\n\r\n/**\r\n * React Component wrapper for the FirebaseUI Auth widget.\r\n */\r\nexport default class FirebaseAuth extends React.Component {\r\n  /**\r\n   * Constructor  Firebase Auth UI component\r\n   *\r\n   * @param {Object} props - Additional object properties.\r\n   * @constructor\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.uiConfig = props.uiConfig;\r\n    this.firebaseAuth = props.firebaseAuth;\r\n    this.className = props.className;\r\n    this.uiCallback = props.uiCallback;\r\n    this.unregisterAuthObserver = () => {};\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  componentDidMount() {\r\n    // Import the css only on the client.\r\n    require('firebaseui/dist/firebaseui.css');\r\n\r\n    // Firebase UI only works on the Client. So we're loading the package in `componentDidMount`\r\n    // So that this works when doing server-side rendering.\r\n    const firebaseui = require('firebaseui');\r\n\r\n    // Wait in case the firebase UI instance is being deleted.\r\n    // This can happen if you unmount/remount the element quickly.\r\n    return firebaseUiDeletion.then(() => {\r\n      // Get or Create a firebaseUI instance.\r\n      this.firebaseUiWidget = firebaseui.auth.AuthUI.getInstance()\r\n           || new firebaseui.auth.AuthUI(this.firebaseAuth);\r\n      if (this.uiConfig.signInFlow === 'popup') {\r\n        this.firebaseUiWidget.reset();\r\n      }\r\n\r\n      // We track the auth state to reset firebaseUi if the user signs out.\r\n      this.userSignedIn = false;\r\n      this.unregisterAuthObserver = this.firebaseAuth.onAuthStateChanged((user) => {\r\n        if (!user && this.userSignedIn) {\r\n          this.firebaseUiWidget.reset();\r\n        }\r\n        this.userSignedIn = !!user;\r\n      });\r\n\r\n      // Trigger the callback if any was set.\r\n      if (this.uiCallback) {\r\n        this.uiCallback(this.firebaseUiWidget);\r\n      }\r\n\r\n      // Render the firebaseUi Widget.\r\n      this.firebaseUiWidget.start('#' + ELEMENT_ID, this.uiConfig);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  componentWillUnmount() {\r\n    firebaseUiDeletion = firebaseUiDeletion.then(() => {\r\n      this.unregisterAuthObserver();\r\n      return this.firebaseUiWidget.delete();\r\n    });\r\n    return firebaseUiDeletion;\r\n  }\r\n\r\n  /**\r\n   * Properties types.\r\n   */\r\n  props: {\r\n    // The Firebase UI Web UI Config object.\r\n    // See: https://github.com/firebase/firebaseui-web#configuration\r\n    uiConfig: Object,\r\n    // The Firebase App auth instance to use.\r\n    firebaseAuth: Object,\r\n    // Callback that will be passed the FirebaseUi instance before it is\r\n    // started. This allows access to certain configuration options such as\r\n    // disableAutoSignIn().\r\n    uiCallback?: Function,\r\n    className?: String,\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  render() {\r\n    return (\r\n      <div className={this.className} id={ELEMENT_ID}/>\r\n    );\r\n  }\r\n}\r\n"]}